// <auto-generated />
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnion.Integration.Tests.Generated
{
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::MagicOnion;
    using global::MagicOnion.Client;

    public static partial class MagicOnionInitializer
    {
        static bool isRegistered = false;

        public static void Register()
        {
            if (isRegistered) return;
            isRegistered = true;

            global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default =
                (global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider immutableMagicOnionClientFactoryProvider)
                    ? immutableMagicOnionClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);

            global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default =
                (global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider immutableStreamingHubClientFactoryProvider)
                    ? immutableStreamingHubClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);
        }
    }

    public partial class MagicOnionGeneratedClientFactoryProvider : global::MagicOnion.Client.IMagicOnionClientFactoryProvider, global::MagicOnion.Client.IStreamingHubClientFactoryProvider
    {
        public static MagicOnionGeneratedClientFactoryProvider Instance { get; } = new MagicOnionGeneratedClientFactoryProvider();

        MagicOnionGeneratedClientFactoryProvider() {}

        bool global::MagicOnion.Client.IMagicOnionClientFactoryProvider.TryGetFactory<T>(out global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> factory)
            => (factory = MagicOnionClientFactoryCache<T>.Factory) != null;

        bool global::MagicOnion.Client.IStreamingHubClientFactoryProvider.TryGetFactory<TStreamingHub, TReceiver>(out global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> factory)
            => (factory = StreamingHubClientFactoryCache<TStreamingHub, TReceiver>.Factory) != null;

        static class MagicOnionClientFactoryCache<T> where T : global::MagicOnion.IService<T>
        {
            public readonly static global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> Factory;

            static MagicOnionClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>);

                if (typeof(T) == typeof(global::MagicOnion.Integration.Tests.IClientFilterTestService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnion.Integration.Tests.IClientFilterTestService>)((x, y) => new MagicOnion.Integration.Tests.ClientFilterTestServiceClient(x, y)));
                }
                if (typeof(T) == typeof(global::MagicOnion.Integration.Tests.IDynamicArgumentTupleService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnion.Integration.Tests.IDynamicArgumentTupleService>)((x, y) => new MagicOnion.Integration.Tests.DynamicArgumentTupleServiceClient(x, y)));
                }
                if (typeof(T) == typeof(global::MagicOnion.Integration.Tests.ISerializerTestService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnion.Integration.Tests.ISerializerTestService>)((x, y) => new MagicOnion.Integration.Tests.SerializerTestServiceClient(x, y)));
                }
                if (typeof(T) == typeof(global::MagicOnion.Integration.Tests.IStreamingTestService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnion.Integration.Tests.IStreamingTestService>)((x, y) => new MagicOnion.Integration.Tests.StreamingTestServiceClient(x, y)));
                }
                if (typeof(T) == typeof(global::MagicOnion.Integration.Tests.IUnaryService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnion.Integration.Tests.IUnaryService>)((x, y) => new MagicOnion.Integration.Tests.UnaryServiceClient(x, y)));
                }
                Factory = (global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>)factory;
            }
        }
        
        static class StreamingHubClientFactoryCache<TStreamingHub, TReceiver> where TStreamingHub : global::MagicOnion.IStreamingHub<TStreamingHub, TReceiver>
        {
            public readonly static global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> Factory;

            static StreamingHubClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>);

                if (typeof(TStreamingHub) == typeof(global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub) && typeof(TReceiver) == typeof(global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHubReceiver))
                {
                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub, global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHubReceiver>)((a, _, b, c, d, e) => new MagicOnion.Integration.Tests.HandCraftedStreamingHubClientTestHubClient(a, b, c, d, e)));
                }
                if (typeof(TStreamingHub) == typeof(global::MagicOnion.Integration.Tests.ISerializerTestHub) && typeof(TReceiver) == typeof(global::MagicOnion.Integration.Tests.ISerializerTestHubReceiver))
                {
                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::MagicOnion.Integration.Tests.ISerializerTestHub, global::MagicOnion.Integration.Tests.ISerializerTestHubReceiver>)((a, _, b, c, d, e) => new MagicOnion.Integration.Tests.SerializerTestHubClient(a, b, c, d, e)));
                }
                if (typeof(TStreamingHub) == typeof(global::MagicOnion.Integration.Tests.IStreamingHubTestHub) && typeof(TReceiver) == typeof(global::MagicOnion.Integration.Tests.IStreamingHubTestHubReceiver))
                {
                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::MagicOnion.Integration.Tests.IStreamingHubTestHub, global::MagicOnion.Integration.Tests.IStreamingHubTestHubReceiver>)((a, _, b, c, d, e) => new MagicOnion.Integration.Tests.StreamingHubTestHubClient(a, b, c, d, e)));
                }

                Factory = (global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>)factory;
            }
        }
    }

}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.
namespace MagicOnion.Integration.Tests.Generated.Resolvers
{
    using global::System;
    using global::MessagePack;

    partial class PreserveAttribute : global::System.Attribute {}
    public class MagicOnionResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new MagicOnionResolver();
    
        MagicOnionResolver() {}
    
        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
            => FormatterCache<T>.formatter;
    
        static class FormatterCache<T>
        {
            public static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> formatter;
    
            static FormatterCache()
            {
                var f = MagicOnionResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }
    internal static class MagicOnionResolverGetFormatterHelper
    {
        static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;
    
        static MagicOnionResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(5)
            {
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>), 0 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>), 1 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>), 2 },
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>), 3 },
                {typeof(global::System.ValueTuple<global::System.Int32, global::System.Int32>), 4 },
            };
        }
        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }
        
            switch (key)
            {
                case 0: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>(default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32), default(global::System.Int32));
                case 1: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32>(default(global::System.Int32), default(global::System.Int32));
                case 2: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.String, global::System.Boolean>(default(global::System.Int32), default(global::System.String), default(global::System.Boolean));
                case 3: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.String>(default(global::System.Int32), default(global::System.String));
                case 4: return new global::MessagePack.Formatters.ValueTupleFormatter<global::System.Int32, global::System.Int32>();
                default: return null;
            }
        }
    }
    /// <summary>Type hints for Ahead-of-Time compilation.</summary>
    [MagicOnion.Integration.Tests.Generated.Resolvers.Preserve]
    internal static class TypeHints
    {
        [MagicOnion.Integration.Tests.Generated.Resolvers.Preserve]
        internal static void Register()
        {
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.Integration.Tests.MyStreamingRequest>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.Integration.Tests.MyStreamingResponse>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.Integration.Tests.MyUnaryRequest>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.Integration.Tests.MyUnaryResponse>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MessagePack.Nil>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Boolean>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Int32>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.String>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.ValueTuple<global::System.Int32, global::System.Int32>>();
        }
    }
}
#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class ClientFilterTestServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnion.Integration.Tests.IClientFilterTestService>, global::MagicOnion.Integration.Tests.IClientFilterTestService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32> Unary1;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MessagePack.Nil, global::MessagePack.Nil> HeaderEcho;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MessagePack.Nil, global::MessagePack.Nil> AlwaysError;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.Unary1 = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "IClientFilterTestService", "Unary1", serializerProvider);
                this.HeaderEcho = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MessagePack.Nil, global::MessagePack.Nil>(global::Grpc.Core.MethodType.Unary, "IClientFilterTestService", "HeaderEcho", serializerProvider);
                this.AlwaysError = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MessagePack.Nil, global::MessagePack.Nil>(global::Grpc.Core.MethodType.Unary, "IClientFilterTestService", "AlwaysError", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public ClientFilterTestServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private ClientFilterTestServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IClientFilterTestService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new ClientFilterTestServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult<global::System.Int32> Unary1(global::System.Int32 x, global::System.Int32 y)
            => this.core.Unary1.InvokeUnary(this, "IClientFilterTestService/Unary1", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>(x, y));
        public global::MagicOnion.UnaryResult<global::MessagePack.Nil> HeaderEcho()
            => this.core.HeaderEcho.InvokeUnary(this, "IClientFilterTestService/HeaderEcho", global::MessagePack.Nil.Default);
        public global::MagicOnion.UnaryResult<global::MessagePack.Nil> AlwaysError()
            => this.core.AlwaysError.InvokeUnary(this, "IClientFilterTestService/AlwaysError", global::MessagePack.Nil.Default);
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class DynamicArgumentTupleServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnion.Integration.Tests.IDynamicArgumentTupleService>, global::MagicOnion.Integration.Tests.IDynamicArgumentTupleService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32> Unary1;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.Unary1 = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "IDynamicArgumentTupleService", "Unary1", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public DynamicArgumentTupleServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private DynamicArgumentTupleServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IDynamicArgumentTupleService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new DynamicArgumentTupleServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult<global::System.Int32> Unary1(global::System.Int32 arg0, global::System.Int32 arg1, global::System.Int32 arg2, global::System.Int32 arg3, global::System.Int32 arg4, global::System.Int32 arg5, global::System.Int32 arg6, global::System.Int32 arg7, global::System.Int32 arg8, global::System.Int32 arg9, global::System.Int32 arg10, global::System.Int32 arg11, global::System.Int32 arg12, global::System.Int32 arg13, global::System.Int32 arg14)
            => this.core.Unary1.InvokeUnary(this, "IDynamicArgumentTupleService/Unary1", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14));
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class SerializerTestServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnion.Integration.Tests.ISerializerTestService>, global::MagicOnion.Integration.Tests.ISerializerTestService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MessagePack.Nil, global::MessagePack.Nil> UnaryReturnNil;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MessagePack.Nil, global::System.Int32> UnaryParameterless;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32> Unary1;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.UnaryReturnNil = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MessagePack.Nil, global::MessagePack.Nil>(global::Grpc.Core.MethodType.Unary, "ISerializerTestService", "UnaryReturnNil", serializerProvider);
                this.UnaryParameterless = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MessagePack.Nil, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "ISerializerTestService", "UnaryParameterless", serializerProvider);
                this.Unary1 = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "ISerializerTestService", "Unary1", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public SerializerTestServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private SerializerTestServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<ISerializerTestService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new SerializerTestServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult<global::MessagePack.Nil> UnaryReturnNil()
            => this.core.UnaryReturnNil.InvokeUnary(this, "ISerializerTestService/UnaryReturnNil", global::MessagePack.Nil.Default);
        public global::MagicOnion.UnaryResult<global::System.Int32> UnaryParameterless()
            => this.core.UnaryParameterless.InvokeUnary(this, "ISerializerTestService/UnaryParameterless", global::MessagePack.Nil.Default);
        public global::MagicOnion.UnaryResult<global::System.Int32> Unary1(global::System.Int32 arg0, global::System.Int32 arg1, global::System.Int32 arg2, global::System.Int32 arg3, global::System.Int32 arg4, global::System.Int32 arg5, global::System.Int32 arg6, global::System.Int32 arg7, global::System.Int32 arg8, global::System.Int32 arg9, global::System.Int32 arg10, global::System.Int32 arg11, global::System.Int32 arg12, global::System.Int32 arg13, global::System.Int32 arg14)
            => this.core.Unary1.InvokeUnary(this, "ISerializerTestService/Unary1", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14));
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class StreamingTestServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnion.Integration.Tests.IStreamingTestService>, global::MagicOnion.Integration.Tests.IStreamingTestService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32> ClientStreaming;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32> ServerStreaming;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32> DuplexStreaming;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> ClientStreamingRefType;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> ServerStreamingRefType;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> DuplexStreamingRefType;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> ClientStreamingRefTypeReturnsNull;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> ServerStreamingRefTypeReturnsNull;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse> DuplexStreamingRefTypeReturnsNull;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.ClientStreaming = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.ClientStreaming, "IStreamingTestService", "ClientStreaming", serializerProvider);
                this.ServerStreaming = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.ServerStreaming, "IStreamingTestService", "ServerStreaming", serializerProvider);
                this.DuplexStreaming = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.DuplexStreaming, "IStreamingTestService", "DuplexStreaming", serializerProvider);
                this.ClientStreamingRefType = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.ClientStreaming, "IStreamingTestService", "ClientStreamingRefType", serializerProvider);
                this.ServerStreamingRefType = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.ServerStreaming, "IStreamingTestService", "ServerStreamingRefType", serializerProvider);
                this.DuplexStreamingRefType = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.DuplexStreaming, "IStreamingTestService", "DuplexStreamingRefType", serializerProvider);
                this.ClientStreamingRefTypeReturnsNull = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.ClientStreaming, "IStreamingTestService", "ClientStreamingRefTypeReturnsNull", serializerProvider);
                this.ServerStreamingRefTypeReturnsNull = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.ServerStreaming, "IStreamingTestService", "ServerStreamingRefTypeReturnsNull", serializerProvider);
                this.DuplexStreamingRefTypeReturnsNull = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(global::Grpc.Core.MethodType.DuplexStreaming, "IStreamingTestService", "DuplexStreamingRefTypeReturnsNull", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public StreamingTestServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private StreamingTestServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IStreamingTestService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new StreamingTestServiceClient(options, core);
        
        public global::System.Threading.Tasks.Task<global::MagicOnion.ClientStreamingResult<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32>> ClientStreaming()
            => this.core.ClientStreaming.InvokeClientStreaming(this, "IStreamingTestService/ClientStreaming");
        public global::System.Threading.Tasks.Task<global::MagicOnion.ServerStreamingResult<global::System.Int32>> ServerStreaming(global::System.Int32 arg0, global::System.Int32 arg1)
            => this.core.ServerStreaming.InvokeServerStreaming(this, "IStreamingTestService/ServerStreaming", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>(arg0, arg1));
        public global::System.Threading.Tasks.Task<global::MagicOnion.DuplexStreamingResult<global::System.ValueTuple<global::System.Int32, global::System.Int32>, global::System.Int32>> DuplexStreaming()
            => this.core.DuplexStreaming.InvokeDuplexStreaming(this, "IStreamingTestService/DuplexStreaming");
        public global::System.Threading.Tasks.Task<global::MagicOnion.ClientStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>> ClientStreamingRefType()
            => this.core.ClientStreamingRefType.InvokeClientStreaming(this, "IStreamingTestService/ClientStreamingRefType");
        public global::System.Threading.Tasks.Task<global::MagicOnion.ServerStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingResponse>> ServerStreamingRefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
            => this.core.ServerStreamingRefType.InvokeServerStreaming(this, "IStreamingTestService/ServerStreamingRefType", request);
        public global::System.Threading.Tasks.Task<global::MagicOnion.DuplexStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>> DuplexStreamingRefType()
            => this.core.DuplexStreamingRefType.InvokeDuplexStreaming(this, "IStreamingTestService/DuplexStreamingRefType");
        public global::System.Threading.Tasks.Task<global::MagicOnion.ClientStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>> ClientStreamingRefTypeReturnsNull()
            => this.core.ClientStreamingRefTypeReturnsNull.InvokeClientStreaming(this, "IStreamingTestService/ClientStreamingRefTypeReturnsNull");
        public global::System.Threading.Tasks.Task<global::MagicOnion.ServerStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingResponse>> ServerStreamingRefTypeReturnsNull(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
            => this.core.ServerStreamingRefTypeReturnsNull.InvokeServerStreaming(this, "IStreamingTestService/ServerStreamingRefTypeReturnsNull", request);
        public global::System.Threading.Tasks.Task<global::MagicOnion.DuplexStreamingResult<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>> DuplexStreamingRefTypeReturnsNull()
            => this.core.DuplexStreamingRefTypeReturnsNull.InvokeDuplexStreaming(this, "IStreamingTestService/DuplexStreamingRefTypeReturnsNull");
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class UnaryServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnion.Integration.Tests.IUnaryService>, global::MagicOnion.Integration.Tests.IUnaryService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::System.Int32, global::MessagePack.Nil> NonGeneric;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32> ManyParametersReturnsValueType;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyUnaryRequest, global::MagicOnion.Integration.Tests.MyUnaryResponse> RefType;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.Integration.Tests.MyUnaryRequest, global::MagicOnion.Integration.Tests.MyUnaryResponse> RefTypeNull;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.NonGeneric = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::System.Int32, global::MessagePack.Nil>(global::Grpc.Core.MethodType.Unary, "IUnaryService", "NonGeneric", serializerProvider);
                this.ManyParametersReturnsValueType = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "IUnaryService", "ManyParametersReturnsValueType", serializerProvider);
                this.RefType = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyUnaryRequest, global::MagicOnion.Integration.Tests.MyUnaryResponse>(global::Grpc.Core.MethodType.Unary, "IUnaryService", "RefType", serializerProvider);
                this.RefTypeNull = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_RefType_RefType<global::MagicOnion.Integration.Tests.MyUnaryRequest, global::MagicOnion.Integration.Tests.MyUnaryResponse>(global::Grpc.Core.MethodType.Unary, "IUnaryService", "RefTypeNull", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public UnaryServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private UnaryServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IUnaryService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new UnaryServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult NonGeneric(global::System.Int32 arg0)
            => this.core.NonGeneric.InvokeUnaryNonGeneric(this, "IUnaryService/NonGeneric", arg0);
        public global::MagicOnion.UnaryResult<global::System.Int32> ManyParametersReturnsValueType(global::System.Int32 arg0, global::System.Int32 arg1, global::System.Int32 arg2, global::System.Int32 arg3, global::System.Int32 arg4, global::System.Int32 arg5, global::System.Int32 arg6, global::System.Int32 arg7, global::System.Int32 arg8, global::System.Int32 arg9, global::System.Int32 arg10, global::System.Int32 arg11, global::System.Int32 arg12, global::System.Int32 arg13, global::System.Int32 arg14)
            => this.core.ManyParametersReturnsValueType.InvokeUnary(this, "IUnaryService/ManyParametersReturnsValueType", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32, global::System.Int32>(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14));
        public global::MagicOnion.UnaryResult<global::MagicOnion.Integration.Tests.MyUnaryResponse> RefType(global::MagicOnion.Integration.Tests.MyUnaryRequest request)
            => this.core.RefType.InvokeUnary(this, "IUnaryService/RefType", request);
        public global::MagicOnion.UnaryResult<global::MagicOnion.Integration.Tests.MyUnaryResponse> RefTypeNull(global::MagicOnion.Integration.Tests.MyUnaryRequest request)
            => this.core.RefTypeNull.InvokeUnary(this, "IUnaryService/RefTypeNull", request);
    }
}


#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class HandCraftedStreamingHubClientTestHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub, global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHubReceiver>, global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public HandCraftedStreamingHubClientTestHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IHandCraftedStreamingHubClientTestHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.Task MethodReturnWithoutValue()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-925124953, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameterless()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(-545082062, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_One(global::System.Int32 arg0)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::System.Int32>(85995236, arg0);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(1242061127, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
        public global::System.Threading.Tasks.Task<global::System.Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(-2118022106, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
        
        public global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub
        {
            readonly HandCraftedStreamingHubClientTestHubClient parent;
        
            public FireAndForgetClient(HandCraftedStreamingHubClientTestHubClient parent)
                => this.parent = parent;
        
            public global::MagicOnion.Integration.Tests.IHandCraftedStreamingHubClientTestHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.Task MethodReturnWithoutValue()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-925124953, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameterless()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(-545082062, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_One(global::System.Int32 arg0)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::System.Int32>(85995236, arg0);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(1242061127, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
            public global::System.Threading.Tasks.Task<global::System.Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(-2118022106, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -1262822265: // Void OnMessage(global::System.Int32 arg0, global::System.String arg1)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>>(data);
                        receiver.OnMessage(value.Item1, value.Item2);
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -925124953: // Task MethodReturnWithoutValue()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -545082062: // Task<Int32> MethodParameterless()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 85995236: // Task<Int32> MethodParameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 1242061127: // Task<Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -2118022106: // Task<Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class SerializerTestHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::MagicOnion.Integration.Tests.ISerializerTestHub, global::MagicOnion.Integration.Tests.ISerializerTestHubReceiver>, global::MagicOnion.Integration.Tests.ISerializerTestHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public SerializerTestHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "ISerializerTestHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.Task MethodReturnWithoutValue()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-925124953, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameterless()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(-545082062, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_One(global::System.Int32 arg0)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::System.Int32>(85995236, arg0);
        public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(1242061127, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
        public global::System.Threading.Tasks.Task<global::System.Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(-2118022106, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
        
        public global::MagicOnion.Integration.Tests.ISerializerTestHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::MagicOnion.Integration.Tests.ISerializerTestHub
        {
            readonly SerializerTestHubClient parent;
        
            public FireAndForgetClient(SerializerTestHubClient parent)
                => this.parent = parent;
        
            public global::MagicOnion.Integration.Tests.ISerializerTestHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.Task MethodReturnWithoutValue()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-925124953, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameterless()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(-545082062, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_One(global::System.Int32 arg0)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::System.Int32>(85995236, arg0);
            public global::System.Threading.Tasks.Task<global::System.Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(1242061127, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
            public global::System.Threading.Tasks.Task<global::System.Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>, global::System.Int32>(-2118022106, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>(arg0, arg1));
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -1262822265: // Void OnMessage(global::System.Int32 arg0, global::System.String arg1)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String>>(data);
                        receiver.OnMessage(value.Item1, value.Item2);
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -925124953: // Task MethodReturnWithoutValue()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -545082062: // Task<Int32> MethodParameterless()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 85995236: // Task<Int32> MethodParameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 1242061127: // Task<Int32> MethodParameter_Many(global::System.Int32 arg0, global::System.String arg1)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -2118022106: // Task<Int32> Callback(global::System.Int32 arg0, global::System.String arg1)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}

namespace MagicOnion.Integration.Tests
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class StreamingHubTestHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::MagicOnion.Integration.Tests.IStreamingHubTestHub, global::MagicOnion.Integration.Tests.IStreamingHubTestHubReceiver>, global::MagicOnion.Integration.Tests.IStreamingHubTestHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public StreamingHubTestHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IStreamingHubTestHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.Task NoReturn_Parameter_Zero()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-933634881, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task NoReturn_Parameter_One(global::System.Int32 arg0)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::MessagePack.Nil>(1561818363, arg0);
        public global::System.Threading.Tasks.Task NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-423495298, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
        public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_Zero()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(1994667803, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_One(global::System.Int32 arg0)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::System.Int32>(1979862359, arg0);
        public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::System.Int32>(1287160778, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
        public global::System.Threading.Tasks.Task CallReceiver_Parameter_Zero()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-686867585, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task CallReceiver_Parameter_One(global::System.Int32 arg0)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::MessagePack.Nil>(-283979077, arg0);
        public global::System.Threading.Tasks.Task CallReceiver_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-601288642, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
        public global::System.Threading.Tasks.Task Never()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1291900119, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task<global::System.Int32> Never_With_Return()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(2074829953, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_Zero()
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1145997568, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_One(global::System.Int32 arg0)
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::System.Int32, global::MessagePack.Nil>(928334602, arg0));
        public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-1965648219, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2)));
        public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_Zero()
            => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(658969434, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_One(global::System.Int32 arg0)
            => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(base.WriteMessageWithResponseAsync<global::System.Int32, global::System.Int32>(-435674772, arg0));
        public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
            => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(base.WriteMessageWithResponseAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::System.Int32>(-52442641, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2)));
        public global::System.Threading.Tasks.ValueTask ValueTask_Never()
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1647082094, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Never_With_Return()
            => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::System.Int32>(-1197600090, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.Task<global::MagicOnion.Integration.Tests.MyStreamingResponse> RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(1032130514, request);
        public global::System.Threading.Tasks.Task<global::MagicOnion.Integration.Tests.MyStreamingResponse> RefType_Null(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(1253352858, request);
        public global::System.Threading.Tasks.Task CallReceiver_RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
            => base.WriteMessageWithResponseAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MessagePack.Nil>(1503747814, request);
        public global::System.Threading.Tasks.Task CallReceiver_RefType_Null()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1093215042, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task CallReceiver_Delay(global::System.Int32 milliseconds)
            => base.WriteMessageWithResponseAsync<global::System.Int32, global::MessagePack.Nil>(1865731236, milliseconds);
        public global::System.Threading.Tasks.Task ThrowReturnStatusException()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(28149104, global::MessagePack.Nil.Default);
        public global::System.Threading.Tasks.Task Throw()
            => base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(540272591, global::MessagePack.Nil.Default);
        
        public global::MagicOnion.Integration.Tests.IStreamingHubTestHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::MagicOnion.Integration.Tests.IStreamingHubTestHub
        {
            readonly StreamingHubTestHubClient parent;
        
            public FireAndForgetClient(StreamingHubTestHubClient parent)
                => this.parent = parent;
        
            public global::MagicOnion.Integration.Tests.IStreamingHubTestHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.Task NoReturn_Parameter_Zero()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-933634881, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task NoReturn_Parameter_One(global::System.Int32 arg0)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::MessagePack.Nil>(1561818363, arg0);
            public global::System.Threading.Tasks.Task NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-423495298, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
            public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_Zero()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(1994667803, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_One(global::System.Int32 arg0)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::System.Int32>(1979862359, arg0);
            public global::System.Threading.Tasks.Task<global::System.Int32> Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::System.Int32>(1287160778, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
            public global::System.Threading.Tasks.Task CallReceiver_Parameter_Zero()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-686867585, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task CallReceiver_Parameter_One(global::System.Int32 arg0)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::MessagePack.Nil>(-283979077, arg0);
            public global::System.Threading.Tasks.Task CallReceiver_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-601288642, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2));
            public global::System.Threading.Tasks.Task Never()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1291900119, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task<global::System.Int32> Never_With_Return()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(2074829953, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_Zero()
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1145997568, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_One(global::System.Int32 arg0)
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::MessagePack.Nil>(928334602, arg0));
            public global::System.Threading.Tasks.ValueTask ValueTask_NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::MessagePack.Nil>(-1965648219, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2)));
            public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_Zero()
                => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(658969434, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_One(global::System.Int32 arg0)
                => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::System.Int32>(-435674772, arg0));
            public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(parent.WriteMessageFireAndForgetAsync<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>, global::System.Int32>(-52442641, new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>(arg0, arg1, arg2)));
            public global::System.Threading.Tasks.ValueTask ValueTask_Never()
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1647082094, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.ValueTask<global::System.Int32> ValueTask_Never_With_Return()
                => new global::System.Threading.Tasks.ValueTask<global::System.Int32>(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::System.Int32>(-1197600090, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.Task<global::MagicOnion.Integration.Tests.MyStreamingResponse> RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(1032130514, request);
            public global::System.Threading.Tasks.Task<global::MagicOnion.Integration.Tests.MyStreamingResponse> RefType_Null(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MagicOnion.Integration.Tests.MyStreamingResponse>(1253352858, request);
            public global::System.Threading.Tasks.Task CallReceiver_RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                => parent.WriteMessageFireAndForgetAsync<global::MagicOnion.Integration.Tests.MyStreamingRequest, global::MessagePack.Nil>(1503747814, request);
            public global::System.Threading.Tasks.Task CallReceiver_RefType_Null()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-1093215042, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task CallReceiver_Delay(global::System.Int32 milliseconds)
                => parent.WriteMessageFireAndForgetAsync<global::System.Int32, global::MessagePack.Nil>(1865731236, milliseconds);
            public global::System.Threading.Tasks.Task ThrowReturnStatusException()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(28149104, global::MessagePack.Nil.Default);
            public global::System.Threading.Tasks.Task Throw()
                => parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(540272591, global::MessagePack.Nil.Default);
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case 1445325235: // Void Receiver_Parameter_Zero()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.Receiver_Parameter_Zero();
                    }
                    break;
                case 1150128799: // Void Receiver_Parameter_One(global::System.Int32 arg0)
                    {
                        var value = base.Deserialize<global::System.Int32>(data);
                        receiver.Receiver_Parameter_One(value);
                    }
                    break;
                case 283674770: // Void Receiver_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    {
                        var value = base.Deserialize<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.String, global::System.Boolean>>(data);
                        receiver.Receiver_Parameter_Many(value.Item1, value.Item2, value.Item3);
                    }
                    break;
                case -1554122998: // Void Receiver_RefType(global::MagicOnion.Integration.Tests.MyStreamingResponse request)
                    {
                        var value = base.Deserialize<global::MagicOnion.Integration.Tests.MyStreamingResponse>(data);
                        receiver.Receiver_RefType(value);
                    }
                    break;
                case -218411390: // Void Receiver_RefType_Null(global::MagicOnion.Integration.Tests.MyStreamingResponse request)
                    {
                        var value = base.Deserialize<global::MagicOnion.Integration.Tests.MyStreamingResponse>(data);
                        receiver.Receiver_RefType_Null(value);
                    }
                    break;
                case -5486432: // Void Receiver_Delay()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.Receiver_Delay();
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -933634881: // Task NoReturn_Parameter_Zero()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1561818363: // Task NoReturn_Parameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -423495298: // Task NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1994667803: // Task<Int32> Parameter_Zero()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 1979862359: // Task<Int32> Parameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 1287160778: // Task<Int32> Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -686867585: // Task CallReceiver_Parameter_Zero()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -283979077: // Task CallReceiver_Parameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -601288642: // Task CallReceiver_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1291900119: // Task Never()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 2074829953: // Task<Int32> Never_With_Return()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -1145997568: // ValueTask ValueTask_NoReturn_Parameter_Zero()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 928334602: // ValueTask ValueTask_NoReturn_Parameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1965648219: // ValueTask ValueTask_NoReturn_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 658969434: // ValueTask<Int32> ValueTask_Parameter_Zero()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -435674772: // ValueTask<Int32> ValueTask_Parameter_One(global::System.Int32 arg0)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -52442641: // ValueTask<Int32> ValueTask_Parameter_Many(global::System.Int32 arg0, global::System.String arg1, global::System.Boolean arg2)
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case -1647082094: // ValueTask ValueTask_Never()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1197600090: // ValueTask<Int32> ValueTask_Never_With_Return()
                    base.SetResultForResponse<global::System.Int32>(taskCompletionSource, data);
                    break;
                case 1032130514: // Task<MyStreamingResponse> RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                    base.SetResultForResponse<global::MagicOnion.Integration.Tests.MyStreamingResponse>(taskCompletionSource, data);
                    break;
                case 1253352858: // Task<MyStreamingResponse> RefType_Null(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                    base.SetResultForResponse<global::MagicOnion.Integration.Tests.MyStreamingResponse>(taskCompletionSource, data);
                    break;
                case 1503747814: // Task CallReceiver_RefType(global::MagicOnion.Integration.Tests.MyStreamingRequest request)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1093215042: // Task CallReceiver_RefType_Null()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1865731236: // Task CallReceiver_Delay(global::System.Int32 milliseconds)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 28149104: // Task ThrowReturnStatusException()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 540272591: // Task Throw()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}


